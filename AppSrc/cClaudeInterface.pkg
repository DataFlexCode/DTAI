Use cAIResponseTranslator.pkg

Class cClaudeInterface is a cAIInterface

    Procedure construct_object
        Forward Send Construct_Object
        
        Set peTransferFlags to ifSecure
        Set piRemotePort to rpHttpSSL
        
        Property String psHost "api.anthropic.com"
        Property String psApiKey (EnvironmentVariable(ghoEnvironment,'claude-api-key')) 
        Property String psAnthropicVersion "2023-06-01"
        Property String psModelId "claude-sonnet-4-20250514"
        Property Integer piMaxTokens 1024
        // set to true if using files API
        Property Boolean pbEnableFilesApi False
        
        Object oClaudeRequest is a cClaudeRequest
        End_Object
        
        Object oClaudeTranslator is a cClaudeTranslator
        End_Object
    End_Procedure

    Procedure end_construct_object
        Forward Send End_Construct_Object
    End_Procedure
    
    Procedure AddStandardHeaders String sContentType
        Integer iRetVal 
        Set pbClearHeaders to False
        Send ClearHeaders
        If (num_arguments=0) Get AddHeader "Content-Type" "application/json" to iRetVal
        Else Get AddHeader "Content-Type" sContentType to iRetVal
        Get AddHeader "x-api-key" (psApiKey(Self)) to iRetVal
        Get AddHeader "anthropic-version" (psAnthropicVersion(Self)) to iRetVal
        If (pbEnableFilesApi(Self)) Get AddHeader "anthropic-beta" "files-api-2025-04-14" to iRetVal
    End_Procedure
    
    // returns a handle to a valid response JSON object that is intended to be be deserialized 
    //  into a struct.  If error, display message and return 0
    Function MakeRequestJSON Handle hoRequest Returns Handle
        Integer iRetVal
        Handle hoResponse hoError
        String sResponseType sMessage
        Boolean bOk
        
        Send AddStandardHeaders
        Get httpPostJson (psHost(Self)) "v1/messages" hoRequest (&bOk) to hoResponse
        If (not(bOk)) Begin
            Send UserError (TransferErrorDescription(Self)) "Transfer failed!"
        End
        Else Begin
            Send RemoveNullMembers hoResponse
            // check for error and display
            Get MemberValue of hoResponse "type" to sResponseType
            If (sResponseType='error') Begin
                Get Member of hoResponse "error" to hoError
                Get MemberValue of hoError "type" to sResponseType
                Get MemberValue of hoError "message" to sMessage
                Send Stop_Box sMessage sResponseType   
                //
                Send Destroy of hoResponse
                Move 0 to hoResponse
            End
        End
        Function_Return hoResponse
    End_Function
    
    Function ModelList Returns tAIModel[]
        Boolean bOk
        Handle hoResponse
        tClaudeModelList claudeModelList
        tAIModel[] ModelList        
        Integer i iCnt
            
        Get paModels to ModelList
        If (SizeOfArray(ModelList)=0) Begin
            Send AddStandardHeaders
            Get HttpGetJson (psHost(Self)) "v1/models" (&bok) to hoResponse
            If (not(bOk)) Begin
                Send UserError (TransferErrorDescription(Self)) "Transfer failed!"
            End
            Else Begin
                Get JsonToDataType of hoResponse to claudeModelList
                Send Destroy of hoResponse
            End
            Move (Sizeofarray(claudeModelList.data)-1) to iCnt
            For i from 0 to iCnt
                Move (claudeModellist.data[i].id) to ModelList[i].id
                Move (claudeModellist.data[i].display_name) to ModelList[i].display_name
                Move (claudeModellist.data[i].created_at) to ModelList[i].created_at
                Move (claudeModellist.data[i].type) to ModelList[i].type
            Loop
            Set paModels to ModelList
        End        
        Function_Return ModelList
    End_Function
    
    Function CreateRequest String sPrompt tAIAttachment[] Attachments Returns Handle 
        Handle hoRequest
        tClaudeAttachment[] NoAttachments
        
        If (num_arguments=1) Get CreateClaudeApiRequest of (oClaudeRequest(Self)) sPrompt NoAttachments to hoRequest
        If (num_arguments=2) Get CreateClaudeApiRequest of (oClaudeRequest(Self)) sPrompt Attachments to hoRequest
        Function_Return hoRequest
    End_Function
    
    Function MakeRequest Handle hoRequest Returns tAIResponse
        Handle hoResponse
        tClaudeResponse ClaudeResponse
        tAIResponse Response
        
        Get MakeRequestJSON hoRequest to hoResponse
        If (hoResponse) Begin
            Set pbRequireAllMembers of hoResponse to False
            Get JsonToDataType of hoResponse to ClaudeResponse
            //
            Get TranslateToUnified of oClaudeTranslator ClaudeResponse to Response
        End
        
        Function_Return Response
    End_Function
End_Class