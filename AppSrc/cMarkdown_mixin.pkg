Use DoStartDocument.pkg

Class cMarkdown_mixin is a Mixin
    
    Procedure define_cMarkdown_mixin 
        Property String psConversionMethod 'pandoc'
    End_Procedure
    
    Function ExtractJSON String sText Returns Handle
        // if you ask for JSON, we expect the response to be markdown with ``` to indicate code, 
        //  and the JSON itself should start with "{" and end with "}" just take everything in 
        //  between   
        // return a handle to a cJSONObject
    End_Function

    // we might want plain HTML that can be inserted into an existing doc, or a full HTML document 
    //  pandoc has options IIRC    
    Function Pandoc_Markdown2Html String sMarkdown Returns String
        Boolean bExist
        String sHtml
        String sTempPath
        String sMarkdownFile sHtmlFile
        UChar[] auHtml
        
        Get_Environment "TEMP" to sTempPath
        Move (sTempPath+'\markdown.md') to sMarkdownFile
        Move (sTempPath+'\html.htm') to sHtmlFile
        Direct_Output sMarkdownFile
        Write sMarkdown
        Close_Output
        Runprogram Wait ('pandoc "'+sMarkdownFile+'" -f markdown -t html -o "'+sHtmlFile+'"') 
        File_Exist sHtmlFile bExist
        If (bExist) Begin
            Direct_Input sHtmlFile
            Read_Block auHtml -1
            Close_Input
        End
        Else Begin
            Error DFERR_PROGRAM ("PANDOC conversion error.  HTML file is missing.  Expected:"*sHtmlFile)
        End
        
        EraseFile sMarkdownFile    
        EraseFile sHtmlFile
        
        Function_Return (UCharArrayToString(auHtml))
    End_Function
    
    Function Markdown2Html String sMarkdown Returns String
        String sMethod
        String sHtml
        
        Get psConversionMethod to sMethod
        If (sMethod='pandoc') Get Pandoc_Markdown2Html sMarkdown to sHtml
        
        Function_Return sHtml
    End_Function
End_Class

