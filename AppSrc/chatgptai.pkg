Use cJsonObject.pkg
Use chatgptai.h
Use cChatGPTRequest.pkg
Use cEnvironment.pkg

If (ghoEnvironment=0) Begin
    Object oEnvironment is a cEnvironment
    End_Object
End

Class cChatGPTInterface is a cAIInterface
    Procedure Construct_Object
        Forward Send Construct_Object

        Property String psApiKey (EnvironmentVariable(ghoEnvironment, "chatgpt-api-key"))
        Property String psHost "api.openai.com"
        Property String psTemperature '1.0'
        Property String psModelId "gpt-4.1-nano" // 'gpt-3.5-turbo' "gpt-4.1-nano" "gpt-4.1-mini" "gpt-4.1"
        Property Integer piMaxTokens 1024
        
        object oChatGPTRequest is a cChatGPTRequest
        end_object

    End_Procedure

    //-----------------------------------------------------------------------------
    // Add headers required for ChatGPT API calls
    //-----------------------------------------------------------------------------
    Procedure AddStandardHeaders
        Integer iRetVal
        
        Send ClearHeaders
        Get AddHeader "Authorization" ("Bearer " + psApiKey(Self)) to iRetVal
        Set psContentTypeSent to "application/json"
        
        //Get AddHeader "Content-Type" "application/json" to iRetVal
    End_Procedure

    //-----------------------------------------------------------------------------
    // Function to retrieve the list of available ChatGPT models
    //-----------------------------------------------------------------------------
    Function ModelList Returns tAIModel[]
        Boolean bOk
        Handle hoResponse
        tChatGPTModelList chatModelList
        tAIModel[] ModelList
        Integer i iCnt

        // Add required headers
        Send AddStandardHeaders

        // Call ChatGPT API
        Get HttpGetJson (psHost(Self)) "v1/models" (&bOk) to hoResponse

        If (not(bOk)) Begin
            Send UserError (TransferErrorDescription(Self)) "Transfer failed!"
        End
        Else Begin
            // Parse JSON 2 DataFlex struct
            Get JsonToDataType of hoResponse to chatModelList
            Send Destroy of hoResponse
        End

        // Populate unified tAIModel array
        Move (SizeOfArray(chatModelList.data)-1) to iCnt
        For i from 0 to iCnt
            Move (chatModelList.data[i].id)       to ModelList[i].id
            Move (chatModelList.data[i].Object)   to ModelList[i]._object
            Move (chatModelList.data[i].created)  to ModelList[i].created
            Move (chatModelList.data[i].owned_by) to ModelList[i].owned_by

            // Fields not provided by ChatGPT models API
            Move "" to ModelList[i].display_name
            Move "" to ModelList[i].type
            Move "" to ModelList[i].created_at
        Loop

        Function_Return ModelList
    End_Function

    //-----------------------------------------------------------------------------
    // Function to request a chat completion
    //-----------------------------------------------------------------------------
    Function CreateChatCompletion String sModel tChatGPTMessage[] Messages Integer iMaxTokens String sTemperature Returns tChatGPTResponse
        Handle hoJson hoReq
        Boolean bOk
        Handle hoResponse
        tChatGPTResponse ChatResp

        Get Create (RefClass(cChatGPTRequest)) to hoReq
        Get ConstructRequest of hoReq sModel Messages iMaxTokens sTemperature to hoJson

        // Add required headers
        Send AddStandardHeaders

        Get HttpPostJson (psHost(Self)) "v1/chat/completions" hoJson (&bOk) to hoResponse

        If (not(bOk)) Begin
            Send UserError (TransferErrorDescription(Self)) "Transfer failed!"
        End
        Else Begin
            Get JsonToDataType of hoResponse to ChatResp
            Send Destroy of hoResponse
        End

        Send Destroy of hoJson
        Send Destroy of hoReq

        Function_Return ChatResp
    End_Function

    //-----------------------------------------------------------------------------
    // Function to create a ChatGPT request JSON object from a prompt + attachments
    //-----------------------------------------------------------------------------
    Function CreateRequest String sPrompt tAIAttachment[] Attachments Returns Handle
        Handle hoRequest hoJson
        tChatGPTMessage[] aMessages
        Integer i iCnt

        // Add the prompt as the first message
        Move "user"   to aMessages[0].role
        Move sPrompt  to aMessages[0].content

        // Convert attachments into additional user messages
        Move (SizeOfArray(Attachments)-1) to iCnt
        For i from 0 to iCnt
            Move "user" to aMessages[i+1].role
            Move ("Attachment ("+Attachments[i].sMimeType+"): " + ;
                 (UCharArrayToString(Attachments[i].uBase64File))) to aMessages[i+1].content
        Loop

        // Call the request builder to build JSON
        Get ConstructRequest of (oChatGPTRequest(Self)) (psModelId(Self)) aMessages (piMaxTokens(Self)) (psTemperature(Self)) to hoJson

        Move hoJson to hoRequest
        Function_Return hoRequest
    End_Function  

    //-----------------------------------------------------------------------------
    // Send the request to ChatGPT and return a JSON object containing its response
    //-----------------------------------------------------------------------------
    Function MakeRequestJSON Handle hoRequest Returns Handle
        Handle hoResponse hoError
        Boolean bOk
        String sMessage

        Send AddStandardHeaders

        // POST the request JSON to the Chat Completions endpoint
        Get HttpPostJson (psHost(Self)) "v1/chat/completions" hoRequest (&bOk) to hoResponse

        If (not(bOk)) Begin
            Send UserError (TransferErrorDescription(Self)) "Transfer failed!"
            Move 0 to hoResponse
        End
        Else Begin
            Send RemoveNullMembers hoResponse

            // Check for error object in response
            If (HasMember(hoResponse, "error")) Begin
                Get Member of hoResponse "error" to hoError
                Get MemberValue of hoError "message" to sMessage

                Send Stop_Box sMessage "API Error"
                Send Destroy of hoResponse
                Move 0 to hoResponse
            End
        End

        Function_Return hoResponse
    End_Function
End_Class

Global_Variable Handle ghoChatGPTAI

Object oChatGPTAI is a cChatGPTInterface
    Move Self to ghoChatGPTAI
End_Object
