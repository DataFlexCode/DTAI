use claudeai.h
use cEnvironment.pkg
Use cJsonObject.pkg
Use cdtJsonHttpTransfer.pkg
Use cClaudeRequest.pkg
Use cMarkdown_mixin.pkg

If (ghoEnvironment=0) Begin
    Object oEnvironment is a cEnvironment
    End_Object
End

Class cClaudeInterface is a cdtJsonHttpTransfer

    Import_Class_Protocol cMarkdown_mixin
    
    Procedure construct_object
        Forward Send Construct_Object
        
        Send define_cMarkdown_mixin
        
        Set peTransferFlags to ifSecure
        Set piRemotePort to rpHttpSSL
        
        Property String psHost "api.anthropic.com"
        Property String psApiKey (EnvironmentVariable(ghoEnvironment,'claude-api-key')) // "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" to iRetVal
        Property String psAnthropicVersion "2023-06-01"
        Property String psModelId "claude-sonnet-4-20250514"
        Property Integer piMaxTokens 1024
        // set to true if using files API
        Property Boolean pbEnableFilesApi False
        
        Object oClaudeRequest is a cClaudeRequest
        End_Object
    End_Procedure

    Procedure end_construct_object
        Forward Send End_Construct_Object
    End_Procedure
    
    Procedure AddStandardHeaders String sContentType
        Integer iRetVal 
        Set pbClearHeaders to False
        Send ClearHeaders
        If (num_arguments=0) Get AddHeader "Content-Type" "application/json" to iRetVal
        Else Get AddHeader "Content-Type" sContentType to iRetVal
        Get AddHeader "x-api-key" (psApiKey(Self)) to iRetVal
        Get AddHeader "anthropic-version" (psAnthropicVersion(Self)) to iRetVal
        If (pbEnableFilesApi(Self)) Get AddHeader "anthropic-beta" "files-api-2025-04-14" to iRetVal
    End_Procedure
    
    Function MakeRequest Handle hoRequest Returns Handle
        Integer iRetVal
        Handle hoResponse hoError
        String sResponseType sMessage
        Boolean bOk
        
        Send AddStandardHeaders
        Get httpPostJson (psHost(Self)) "v1/messages" hoRequest (&bOk) to hoResponse
        If (not(bOk)) Begin
            Send UserError (TransferErrorDescription(Self)) "Transfer failed!"
        End
        Else Begin
            Send RemoveNullMembers hoResponse
            // check for error and display
            Get MemberValue of hoResponse "type" to sResponseType
            If (sResponseType='error') Begin
                Get Member of hoResponse "error" to hoError
                Get MemberValue of hoError "type" to sResponseType
                Get MemberValue of hoError "message" to sMessage
                Send Stop_Box sMessage sResponseType                
            End
        End
        Function_Return hoResponse
    End_Function
    
    Function ClaudeModelList Returns tClaudeModelList
        Boolean bOk
        Handle hoResponse
        tClaudeModelList ModelList
        
        
        Send AddStandardHeaders
        Get HttpGetJson (psHost(Self)) "v1/models" (&bok) to hoResponse
        If (not(bOk)) Begin
            Send UserError (TransferErrorDescription(Self)) "Transfer failed!"
        End
        Else Begin
            Get JsonToDataType of hoResponse to ModelList
            Send Destroy of hoResponse
        End
        Function_Return ModelList
    End_Function
    
    Function CreateClaudeApiRequest String sPrompt tClaudeAttachment[] Attachments Returns Handle 
        Handle hoRequest
        tClaudeAttachment[] NoAttachments
        
        If (num_arguments=1) Get CreateClaudeApiRequest of (oClaudeRequest(Self)) sPrompt NoAttachments to hoRequest
        If (num_arguments=2) Get CreateClaudeApiRequest of (oClaudeRequest(Self)) sPrompt Attachments to hoRequest
        Function_Return hoRequest
    End_Function
End_Class

Global_Variable Handle ghoClaudeAI

Object oClaudeAI is a cClaudeInterface 
    Move Self to ghoClaudeAI
End_Object